<?xml version='1.0' encoding='utf-8'?>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
<!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.3.10 -->
<!DOCTYPE rfc SYSTEM "rfc2629-xhtml.ent">
<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="trust200902" docName="draft-ietf-avtcore-cryptex-00" category="std" obsoletes="" updates="" submissionType="IETF" xml:lang="en" tocInclude="true" sortRefs="true" symRefs="true" version="3">
  <!-- xml2rfc v2v3 conversion 2.47.0 -->
  <front>
    <title>Completely Encrypting RTP Header Extensions and Contributing Sources</title>
    <seriesInfo name="Internet-Draft" value="draft-ietf-avtcore-cryptex-00"/>
    <author initials="J." surname="Uberti" fullname="Justin Uberti">
      <organization>Google</organization>
      <address>
        <email>justin@uberti.name</email>
      </address>
    </author>
    <author initials="C." surname="Jennings" fullname="Cullen Jennings">
      <organization>Cisco</organization>
      <address>
        <email>fluffy@iii.ca</email>
      </address>
    </author>
    <author initials="S." surname="Garcia Murillo" fullname="Sergio Garcia Murillo">
      <organization>CoSMo</organization>
      <address>
        <email>sergio.garcia.murillo@cosmosoftware.io</email>
      </address>
    </author>
    <date year="2021" month="January" day="28"/>
    <area>ART</area>
    <workgroup>AVTCORE</workgroup>
    <keyword>SRTP</keyword>
    <abstract>
      <t>While the Secure Real-time Transport Protocol (SRTP) provides confidentiality
for the contents of a media packet, a significant amount of metadata is left
unprotected, including RTP header extensions and contributing sources (CSRCs).
However, this data can be moderately sensitive in many applications. While
there have been previous attempts to protect this data, they have had limited
deployment, due to complexity as well as technical limitations.</t>
      <t>This document proposes a new mechanism to completely encrypt header
extensions and CSRCs as well a simpler signaling mechanism intended to
facilitate deployment.</t>
    </abstract>
    <note removeInRFC="true">
      <name>Discussion Venues</name>
      <t>Source for this draft and an issue tracker can be found at
  <eref target="https://github.com/juberti/cryptex"/>.</t>
    </note>
  </front>
  <middle>
    <section anchor="introduction" numbered="true" toc="default">
      <name>Introduction</name>
      <section anchor="problem-statement" numbered="true" toc="default">
        <name>Problem Statement</name>
        <t>The Secure Real-time Transport Protocol <xref target="RFC3711" format="default"/> mechanism provides message
authentication for the entire RTP packet, but only encrypts the RTP payload.
This has not historically been a problem, as much of the information carried
in the header has minimal sensitivity (e.g., RTP timestamp); in addition,
certain fields need to remain as cleartext because they are used for key
scheduling (e.g., RTP SSRC and sequence number).</t>
        <t>However, as noted in <xref target="RFC6904" format="default"/>, the security requirements can be different for
information carried in RTP header extensions, including the per-packet sound
levels defined in <xref target="RFC6464" format="default"/> and <xref target="RFC6465" format="default"/>, which are specifically noted as
being sensitive in the Security Considerations section of those RFCs.</t>
        <t>In addition to the contents of the header extensions, there are now enough
header extensions in active use that the header extension identifiers
themselves can provide meaningful information in terms of determining the
identity of endpoint and/or application. Accordingly, these identifiers
can be considered at least slightly sensitive.</t>
        <t>Finally, the CSRCs included in RTP packets can also be sensitive, potentially
allowing a network eavesdropper to determine who was speaking and when during
an otherwise secure conference call.</t>
      </section>
      <section anchor="previous-solutions" numbered="true" toc="default">
        <name>Previous Solutions</name>
        <t><xref target="RFC6904" format="default"/> was proposed in 2013 as a solution to the problem of unprotected
header extension values. However, it has not seen significant adoption, and
has a few technical shortcomings.</t>
        <t>First, the mechanism is complicated. Since it allows encryption to be
negotiated on a per-extension basis, a fair amount of signaling logic is
required. And in the SRTP layer, a somewhat complex transform is required
to allow only the selected header extension values to be encrypted. One of
the most popular SRTP implementations had a significant bug in this area
that was not detected for five years.</t>
        <t>Second, it only protects the header extension values, and not their ids or
lengths. It also does not protect the CSRCs. As noted above, this leaves
a fair amount of potentially sensitive information exposed.</t>
        <t>Third, it bloats the header extension space. Because each extension must
be offered in both unencrypted and encrypted forms, twice as many header
extensions must be offered, which will in many cases push implementations
past the 14-extension limit for the use of one-byte extension headers
defined in <xref target="RFC8285" format="default"/>. Accordingly, implementations will need to use
two-byte headers in many cases, which are not supported well by some
existing implementations.</t>
        <t>Finally, the header extension bloat combined with the need for backwards
compatibility results in additional wire overhead. Because two-byte
extension headers may not be handled well by existing implementations,
one-byte extension identifiers will need to be used for the unencrypted
(backwards compatible) forms, and two-byte for the encrypted forms.
Thus, deployment of <xref target="RFC6904" format="default"/> encryption for header extensions will
typically result in multiple extra bytes in each RTP packet, compared
to the present situation.</t>
      </section>
      <section anchor="goals" numbered="true" toc="default">
        <name>Goals</name>
        <t>From this analysis we can state the desired properties of a solution:</t>
        <ul spacing="normal">
          <li>Build on existing <xref target="RFC3711" format="default"/> SRTP framework (simple to understand)</li>
          <li>Build on existing <xref target="RFC8285" format="default"/> header extension framework (simple to implement)</li>
          <li>Protection of header extension ids, lengths, and values</li>
          <li>Protection of CSRCs when present</li>
          <li>Simple signaling</li>
          <li>Simple crypto transform and SRTP interactions</li>
          <li>Backward compatible with unencrypted endpoints, if desired</li>
          <li>Backward compatible with existing RTP tooling</li>
        </ul>
        <t>The last point deserves further discussion. While we considered possible
solutions that would have encrypted more of the RTP header (e.g., the number
of CSRCs), we felt the inability to parse the resultant packets with current
tools, as well as additional complexity incurred, outweighed the slight
improvement in confidentiality.</t>
      </section>
    </section>
    <section anchor="terminology" numbered="true" toc="default">
      <name>Terminology</name>
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD",
"SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be
interpreted as described in <xref target="RFC2119" format="default"/>.</t>
    </section>
    <section anchor="design" numbered="true" toc="default">
      <name>Design</name>
      <t>This specification proposes a mechanism to negotiate encryption of all
RTP header extensions (ids, lengths, and values) as well as CSRC values. It
reuses the existing SRTP framework, is accordingly simple to implement, and
is backward compatible with existing RTP packet parsing code, even when
support for this mechanism has been negotiated.</t>
    </section>
    <section anchor="signaling" numbered="true" toc="default">
      <name>Signaling</name>
      <t>In order to determine whether this mechanism defined in this specification
is supported, this document defines a new "a=extmap-encrypted"
Session Description Protocol (SDP) <xref target="RFC4566" format="default"/> attribute to indicate support.
This attribute takes no value, and
can be used at the session level or media level. Offering this attribute
indicates that the endpoint is capable of receiving RTP packets encrypted
as defined below.</t>
      <t>The formal definition of this attribute is:</t>
      <artwork name="" type="" align="left" alt=""><![CDATA[
  Name: extmap-encrypted

  Value: None

  Usage Level: session, media

  Charset Dependent: No

  Example:

     a=extmap-encrypted
]]></artwork>
      <t>When used with BUNDLE, this attribute is specified as the
   TRANSPORT category. (todo: REF)</t>
    </section>
    <section anchor="rtp-header-processing" numbered="true" toc="default">
      <name>RTP Header Processing</name>
      <t><xref target="RFC8285" format="default"/> defines two values for the "defined by profile" field for carrying
one-byte and two-byte header extensions. In order to allow a receiver to determine
if an incoming RTP packet is using the encryption scheme in this specification,
two new values are defined:</t>
      <ul spacing="normal">
        <li>0xC0DE for the encrypted version of the one-byte header extensions (instead of 0xBEDE).</li>
        <li>0xC2DE for the encrypted versions of the two-byte header extensions (instead of 0x100).</li>
      </ul>
      <t>In the case of using two-byte header extensions, the extension id with value 256 MUST NOT
be negotiated, as the value of this id is meant to be contained in the "appbits" of the
"defined by profile" field, which are not available when using the values above.</t>
      <t>If the "a=extmap-allow-mixed" attribute defined in <xref target="RFC8285" format="default"/> is negotiated, either one-byte
or two-byte header ids can be used (with the values above), as in <xref target="RFC8285" format="default"/>.</t>
      <section anchor="sending" numbered="true" toc="default">
        <name>Sending</name>
        <t>When the mechanism defined by this specification has been negotiated,
sending a RTP packet that has any CSRCs or contains any {RFC8285}}
header extensions follows the steps below. This mechanism MUST NOT be
used with header extensions other than the <xref target="RFC8285" format="default"/> variety.</t>
        <t>If the packet contains solely one-byte extension ids, the 16-bit RTP header extension
tag MUST be set to 0xC0DE to indicate that the encryption has been applied, and the
one-byte framing is being used. If the packet contains only two-byte extension ids,
the header extension tag MUST be set to 0xC2DE to indicate encryption has been applied,
and the two-byte framing is being used.</t>
        <t>If the packet contains CSRCs but no header extensions, an empty extension block
consisting of the 0xC0DE tag and a 16-bit length field set to zero (explicitly
permitted by <xref target="RFC3550" format="default"/>) MUST be appended, and the X bit MUST be set to 1 to
indicate an extension block is present. This is necessary to provide the receiver
an indication that the CSRCs in the packet are encrypted.</t>
        <t>The RTP packet MUST then be encrypted as described in Encryption Procedure.</t>
      </section>
      <section anchor="receiving" numbered="true" toc="default">
        <name>Receiving</name>
        <t>When receiving an RTP packet that contains header extensions, the
"defined by profile" field MUST be checked to ensure the payload is
formatted according to this specification. If the field does not match
one of the values defined above, the implementation MUST instead
handle it according to the specification that defines that value.
The implemntation MAY stop and report an error if it considers use of
this specification mandatory for the RTP stream.</t>
        <t>If the RTP packet passes this check, it is then decrypted according to
Decryption Procedure, and passed to the the next layer to process
the packet and its extensions. In the event that a zero-length extension
block was added as indicated above, it can be left as-is and will be
processed normally.</t>
      </section>
    </section>
    <section anchor="encryption-and-decryption" numbered="true" toc="default">
      <name>Encryption and Decryption</name>
      <section anchor="packet-structure" numbered="true" toc="default">
        <name>Packet Structure</name>
        <t>When this mechanism is active, the SRTP packet is protected as follows:</t>
        <artwork name="" type="" align="left" alt=""><![CDATA[
      0                   1                   2                   3
    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+<+
   |V=2|P|X|  CC   |M|     PT      |       sequence number         | |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |
   |                           timestamp                           | |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |
   |           synchronization source (SSRC) identifier            | |
 +>+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+ |
 | |            contributing source (CSRC) identifiers             | |
 | |                               ....                            | |
 +>+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |
 X |       0xC0    |    0xDE       |           length=3            | |
 +>+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |
 | |                  RFC 8285 header extensions                   | |
 | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |
 | |                          payload  ...                         | |
 | |                               +-------------------------------+ |
 | |                               | RTP padding   | RTP pad count | |
 +>+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+<+
 | ~                     SRTP MKI (OPTIONAL)                       ~ |
 | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |
 | :                 authentication tag (RECOMMENDED)              : |
 | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |
 |                                                                   |
 +- Encrypted Portions*                     Authenticated Portion ---+
]]></artwork>
        <ul spacing="normal">
          <li>Note that the 4 bytes at the start of the extension block are not encrypted, as
required by <xref target="RFC8285" format="default"/>.</li>
        </ul>
        <t>Specifically, the encrypted portion MUST include any CSRC identifiers, any
RTP header extension (except for the first 4 bytes), and the RTP payload.</t>
      </section>
      <section anchor="encryption-procedure" numbered="true" toc="default">
        <name>Encryption Procedure</name>
        <t>The encryption procedure is identical to that of <xref target="RFC3711" format="default"/> except for the
region to encrypt, which is as shown in the section above.</t>
        <t>To minimize changes to surrounding code, the encryption mechanism can choose
to replace a "defined by profile" field from <xref target="RFC8285" format="default"/> with its counterpart
defined in RTP Header Processing above and encrypt at the same time.</t>
      </section>
      <section anchor="decryption-procedure" numbered="true" toc="default">
        <name>Decryption Procedure</name>
        <t>The decryption procedure is identical to that of <xref target="RFC3711" format="default"/> except
for the region to decrypt, which is as shown in the section above.</t>
        <t>To minimize changes to surrounding code, the decryption mechanism can choose
to replace the "defined by profile" field with its no-encryption counterpart
from <xref target="RFC8285" format="default"/> and decrypt at the same time.</t>
      </section>
    </section>
    <section anchor="backwards-compatibility" numbered="true" toc="default">
      <name>Backwards Compatibility</name>
      <t>This specification attempts to encrypt as much as possible without interfering
with backwards compatibility for systems that expect a certain structure from
an RTPv2 packet, including systems that perform demultiplexing based on packet
headers. Accordingly, the first two bytes of the RTP packet are not encrypted.</t>
      <t>This specification also attempts to reuse the key scheduling from SRTP, which
depends on the RTP packet sequence number and SSRC identifier. Accordingly
these values are also not encrypted.</t>
    </section>
    <section anchor="security-considerations" numbered="true" toc="default">
      <name>Security Considerations</name>
      <t>This specification extends SRTP by expanding the portion of the packet that is
encrypted, as shown in Packet Structure. It does not change how SRTP authentication
works in any way. Given that more of the packet is being encrypted than before,
this is necessarily an improvement.</t>
      <t>The RTP fields that are left unencrypted (see rationale above) are as follows:</t>
      <ul spacing="normal">
        <li>RTP version</li>
        <li>padding bit</li>
        <li>extension bit</li>
        <li>number of CSRCs</li>
        <li>marker bit</li>
        <li>payload type</li>
        <li>sequence number</li>
        <li>timestamp</li>
        <li>SSRC identifier</li>
        <li>number of <xref target="RFC8285" format="default"/> header extensions</li>
      </ul>
      <t>These values contain a fixed set (i.e., one that won't be changed by
extensions) of information that, at present, is observed to have low
sensitivity. In the event any of these values need to be encrypted, SRTP
is likely the wrong protocol to use and a fully-encapsulating protocol
such as DTLS is preferred (with its attendant per-packet overhead).</t>
    </section>
    <section anchor="iana-considerations" numbered="true" toc="default">
      <name>IANA Considerations</name>
      <t>This document defines two new 'defined by profile' attributes, as noted in RTP Header Processing.</t>
    </section>
    <section anchor="acknowledgements" numbered="true" toc="default">
      <name>Acknowledgements</name>
      <t>The authors wish to thank Lennart Grahl for pointing out many of the issues with the existing
header encryption mechanism, as well as suggestions for this proposal.
Thanks also to Jonathan Lennox and Inaki Castillo for their review and suggestions.</t>
    </section>
  </middle>
  <back>
    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
        <reference anchor="RFC2119" target="https://www.rfc-editor.org/info/rfc2119">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <seriesInfo name="DOI" value="10.17487/RFC2119"/>
            <seriesInfo name="RFC" value="2119"/>
            <seriesInfo name="BCP" value="14"/>
            <author initials="S." surname="Bradner" fullname="S. Bradner">
              <organization/>
            </author>
            <date year="1997" month="March"/>
            <abstract>
              <t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
        </reference>
        <reference anchor="RFC3550" target="https://www.rfc-editor.org/info/rfc3550">
          <front>
            <title>RTP: A Transport Protocol for Real-Time Applications</title>
            <seriesInfo name="DOI" value="10.17487/RFC3550"/>
            <seriesInfo name="RFC" value="3550"/>
            <seriesInfo name="STD" value="64"/>
            <author initials="H." surname="Schulzrinne" fullname="H. Schulzrinne">
              <organization/>
            </author>
            <author initials="S." surname="Casner" fullname="S. Casner">
              <organization/>
            </author>
            <author initials="R." surname="Frederick" fullname="R. Frederick">
              <organization/>
            </author>
            <author initials="V." surname="Jacobson" fullname="V. Jacobson">
              <organization/>
            </author>
            <date year="2003" month="July"/>
            <abstract>
              <t>This memorandum describes RTP, the real-time transport protocol.  RTP provides end-to-end network transport functions suitable for applications transmitting real-time data, such as audio, video or simulation data, over multicast or unicast network services.  RTP does not address resource reservation and does not guarantee quality-of- service for real-time services.  The data transport is augmented by a control protocol (RTCP) to allow monitoring of the data delivery in a manner scalable to large multicast networks, and to provide minimal control and identification functionality.  RTP and RTCP are designed to be independent of the underlying transport and network layers.  The protocol supports the use of RTP-level translators and mixers. Most of the text in this memorandum is identical to RFC 1889 which it obsoletes.  There are no changes in the packet formats on the wire, only changes to the rules and algorithms governing how the protocol is used. The biggest change is an enhancement to the scalable timer algorithm for calculating when to send RTCP packets in order to minimize transmission in excess of the intended rate when many participants join a session simultaneously.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
        </reference>
        <reference anchor="RFC3711" target="https://www.rfc-editor.org/info/rfc3711">
          <front>
            <title>The Secure Real-time Transport Protocol (SRTP)</title>
            <seriesInfo name="DOI" value="10.17487/RFC3711"/>
            <seriesInfo name="RFC" value="3711"/>
            <author initials="M." surname="Baugher" fullname="M. Baugher">
              <organization/>
            </author>
            <author initials="D." surname="McGrew" fullname="D. McGrew">
              <organization/>
            </author>
            <author initials="M." surname="Naslund" fullname="M. Naslund">
              <organization/>
            </author>
            <author initials="E." surname="Carrara" fullname="E. Carrara">
              <organization/>
            </author>
            <author initials="K." surname="Norrman" fullname="K. Norrman">
              <organization/>
            </author>
            <date year="2004" month="March"/>
            <abstract>
              <t>This document describes the Secure Real-time Transport Protocol (SRTP), a profile of the Real-time Transport Protocol (RTP), which can provide confidentiality, message authentication, and replay protection to the RTP traffic and to the control traffic for RTP, the Real-time Transport Control Protocol (RTCP).   [STANDARDS-TRACK]</t>
            </abstract>
          </front>
        </reference>
        <reference anchor="RFC4566" target="https://www.rfc-editor.org/info/rfc4566">
          <front>
            <title>SDP: Session Description Protocol</title>
            <seriesInfo name="DOI" value="10.17487/RFC4566"/>
            <seriesInfo name="RFC" value="4566"/>
            <author initials="M." surname="Handley" fullname="M. Handley">
              <organization/>
            </author>
            <author initials="V." surname="Jacobson" fullname="V. Jacobson">
              <organization/>
            </author>
            <author initials="C." surname="Perkins" fullname="C. Perkins">
              <organization/>
            </author>
            <date year="2006" month="July"/>
            <abstract>
              <t>This memo defines the Session Description Protocol (SDP).  SDP is intended for describing multimedia sessions for the purposes of session announcement, session invitation, and other forms of multimedia session initiation.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
        </reference>
        <reference anchor="RFC8285" target="https://www.rfc-editor.org/info/rfc8285">
          <front>
            <title>A General Mechanism for RTP Header Extensions</title>
            <seriesInfo name="DOI" value="10.17487/RFC8285"/>
            <seriesInfo name="RFC" value="8285"/>
            <author initials="D." surname="Singer" fullname="D. Singer">
              <organization/>
            </author>
            <author initials="H." surname="Desineni" fullname="H. Desineni">
              <organization/>
            </author>
            <author initials="R." surname="Even" fullname="R. Even" role="editor">
              <organization/>
            </author>
            <date year="2017" month="October"/>
            <abstract>
              <t>This document provides a general mechanism to use the header extension feature of RTP (the Real-time Transport Protocol).  It provides the option to use a small number of small extensions in each RTP packet, where the universe of possible extensions is large and registration is decentralized.  The actual extensions in use in a session are signaled in the setup information for that session.  This document obsoletes RFC 5285.</t>
            </abstract>
          </front>
        </reference>
      </references>
      <references>
        <name>Informative References</name>
        <reference anchor="RFC6464" target="https://www.rfc-editor.org/info/rfc6464">
          <front>
            <title>A Real-time Transport Protocol (RTP) Header Extension for Client-to-Mixer Audio Level Indication</title>
            <seriesInfo name="DOI" value="10.17487/RFC6464"/>
            <seriesInfo name="RFC" value="6464"/>
            <author initials="J." surname="Lennox" fullname="J. Lennox" role="editor">
              <organization/>
            </author>
            <author initials="E." surname="Ivov" fullname="E. Ivov">
              <organization/>
            </author>
            <author initials="E." surname="Marocco" fullname="E. Marocco">
              <organization/>
            </author>
            <date year="2011" month="December"/>
            <abstract>
              <t>This document defines a mechanism by which packets of Real-time Transport Protocol (RTP) audio streams can indicate, in an RTP header extension, the audio level of the audio sample carried in the RTP packet.  In large conferences, this can reduce the load on an audio mixer or other middlebox that wants to forward only a few of the loudest audio streams, without requiring it to decode and measure every stream that is received.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
        </reference>
        <reference anchor="RFC6465" target="https://www.rfc-editor.org/info/rfc6465">
          <front>
            <title>A Real-time Transport Protocol (RTP) Header Extension for Mixer-to-Client Audio Level Indication</title>
            <seriesInfo name="DOI" value="10.17487/RFC6465"/>
            <seriesInfo name="RFC" value="6465"/>
            <author initials="E." surname="Ivov" fullname="E. Ivov" role="editor">
              <organization/>
            </author>
            <author initials="E." surname="Marocco" fullname="E. Marocco" role="editor">
              <organization/>
            </author>
            <author initials="J." surname="Lennox" fullname="J. Lennox">
              <organization/>
            </author>
            <date year="2011" month="December"/>
            <abstract>
              <t>This document describes a mechanism for RTP-level mixers in audio conferences to deliver information about the audio level of individual participants.  Such audio level indicators are transported in the same RTP packets as the audio data they pertain to. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
        </reference>
        <reference anchor="RFC6904" target="https://www.rfc-editor.org/info/rfc6904">
          <front>
            <title>Encryption of Header Extensions in the Secure Real-time Transport Protocol (SRTP)</title>
            <seriesInfo name="DOI" value="10.17487/RFC6904"/>
            <seriesInfo name="RFC" value="6904"/>
            <author initials="J." surname="Lennox" fullname="J. Lennox">
              <organization/>
            </author>
            <date year="2013" month="April"/>
            <abstract>
              <t>The Secure Real-time Transport Protocol (SRTP) provides authentication, but not encryption, of the headers of Real-time Transport Protocol (RTP) packets.  However, RTP header extensions may carry sensitive information for which participants in multimedia sessions want confidentiality.  This document provides a mechanism, extending the mechanisms of SRTP, to selectively encrypt RTP header extensions in SRTP.</t>
              <t>This document updates RFC 3711, the Secure Real-time Transport Protocol specification, to require that all future SRTP encryption transforms specify how RTP header extensions are to be encrypted.</t>
            </abstract>
          </front>
        </reference>
      </references>
    </references>
  </back>
  <!-- ##markdown-source:
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

-->

</rfc>
