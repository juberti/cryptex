<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE rfc [
  <!ENTITY nbsp    "&#160;">
  <!ENTITY zwsp   "&#8203;">
  <!ENTITY nbhy   "&#8209;">
  <!ENTITY wj     "&#8288;">
]>
<?xml-stylesheet type="text/xsl" href="rfc2629.xslt" ?>
<!-- generated by https://github.com/cabo/kramdown-rfc2629 version 1.4.19 -->
<?rfc toc="yes"?>
<?rfc sortrefs="yes"?>
<?rfc symrefs="yes"?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" ipr="trust200902" docName="draft-ietf-avtcore-cryptex-latest" category="std" obsoletes="" updates="" submissionType="IETF" xml:lang="en" tocInclude="true" sortRefs="true" symRefs="true" version="3">
  <!-- xml2rfc v2v3 conversion 3.10.0 -->
  <front>
    <title>Completely Encrypting RTP Header Extensions and Contributing Sources</title>
    <seriesInfo name="Internet-Draft" value="draft-ietf-avtcore-cryptex-latest"/>
    <author initials="J." surname="Uberti" fullname="Justin Uberti">
      <organization>Clubhouse</organization>
      <address>
        <email>justin@uberti.name</email>
      </address>
    </author>
    <author initials="C." surname="Jennings" fullname="Cullen Jennings">
      <organization>Cisco</organization>
      <address>
        <email>fluffy@iii.ca</email>
      </address>
    </author>
    <author initials="S." surname="Garcia Murillo" fullname="Sergio Garcia Murillo">
      <organization>CoSMo</organization>
      <address>
        <email>sergio.garcia.murillo@cosmosoftware.io</email>
      </address>
    </author>
    <date year="2021" month="October" day="25"/>
    <area>ART</area>
    <workgroup>AVTCORE</workgroup>
    <keyword>SRTP</keyword>
    <abstract>
      <t>While the Secure Real-time Transport Protocol (SRTP) provides confidentiality
for the contents of a media packet, a significant amount of metadata is left
unprotected, including RTP header extensions and contributing sources (CSRCs).
However, this data can be moderately sensitive in many applications. While
there have been previous attempts to protect this data, they have had limited
deployment, due to complexity as well as technical limitations.</t>
      <t>This document defines Cryptex as a new mechanism that completely encrypts
header extensions and CSRCs and uses simpler signaling with the goal of
facilitating deployment.</t>
    </abstract>
    <note removeInRFC="true">
      <name>Discussion Venues</name>
      <t>Source for this draft and an issue tracker can be found at
  <eref target="https://github.com/juberti/cryptex"/>.</t>
    </note>
  </front>
  <middle>
    <section anchor="introduction" numbered="true" toc="default">
      <name>Introduction</name>
      <section anchor="problem-statement" numbered="true" toc="default">
        <name>Problem Statement</name>
        <t>The Secure Real-time Transport Protocol <xref target="RFC3711" format="default"/> mechanism provides message
authentication for the entire RTP packet, but only encrypts the RTP payload.
This has not historically been a problem, as much of the information carried
in the header has minimal sensitivity (e.g., RTP timestamp); in addition,
certain fields need to remain as cleartext because they are used for key
scheduling (e.g., RTP SSRC and sequence number).</t>
        <t>However, as noted in <xref target="RFC6904" format="default"/>, the security requirements can be different for
information carried in RTP header extensions, including the per-packet sound
levels defined in <xref target="RFC6464" format="default"/> and <xref target="RFC6465" format="default"/>, which are specifically noted as
being sensitive in the Security Considerations section of those RFCs.</t>
        <t>In addition to the contents of the header extensions, there are now enough
header extensions in active use that the header extension identifiers
themselves can provide meaningful information in terms of determining the
identity of the endpoint and/or application. Accordingly, these identifiers
can be considered a fingerprinting issue.</t>
        <t>Finally, the CSRCs included in RTP packets can also be sensitive, potentially
allowing a network eavesdropper to determine who was speaking and when during
an otherwise secure conference call.</t>
      </section>
      <section anchor="previous-solutions" numbered="true" toc="default">
        <name>Previous Solutions</name>
        <t><xref target="RFC6904" format="default"/> was proposed in 2013 as a solution to the problem of unprotected
header extension values. However, it has not seen significant adoption, and
has a few technical shortcomings.</t>
        <t>First, the mechanism is complicated. Since it allows encryption to be
negotiated on a per-extension basis, a fair amount of signaling logic is
required. And in the SRTP layer, a somewhat complex transform is required
to allow only the selected header extension values to be encrypted. One of
the most popular SRTP implementations had a significant bug in this area
that was not detected for five years.</t>
        <t>Second, it only protects the header extension values, and not their ids or
lengths. It also does not protect the CSRCs. As noted above, this leaves
a fair amount of potentially sensitive information exposed.</t>
        <t>Third, it bloats the header extension space. Because each extension must
be offered in both unencrypted and encrypted forms, twice as many header
extensions must be offered, which will in many cases push implementations
past the 14-extension limit for the use of one-byte extension headers
defined in <xref target="RFC8285" format="default"/>. Accordingly, implementations will need to use
two-byte headers in many cases, which are not supported well by some
existing implementations.</t>
        <t>Finally, the header extension bloat combined with the need for backwards
compatibility results in additional wire overhead. Because two-byte
extension headers may not be handled well by existing implementations,
one-byte extension identifiers will need to be used for the unencrypted
(backwards compatible) forms, and two-byte for the encrypted forms.
Thus, deployment of <xref target="RFC6904" format="default"/> encryption for header extensions will
typically result in multiple extra bytes in each RTP packet, compared
to the present situation.</t>
      </section>
      <section anchor="goals" numbered="true" toc="default">
        <name>Goals</name>
        <t>From this analysis we can state the desired properties of a solution:</t>
        <ul spacing="normal">
          <li>Build on existing <xref target="RFC3711" format="default"/> SRTP framework (simple to understand)</li>
          <li>Build on existing <xref target="RFC8285" format="default"/> header extension framework (simple to implement)</li>
          <li>Protection of header extension ids, lengths, and values</li>
          <li>Protection of CSRCs when present</li>
          <li>Simple signaling</li>
          <li>Simple crypto transform and SRTP interactions</li>
          <li>Backward compatible with unencrypted endpoints, if desired</li>
          <li>Backward compatible with existing RTP tooling</li>
        </ul>
        <t>The last point deserves further discussion. While we considered possible
solutions that would have encrypted more of the RTP header (e.g., the number
of CSRCs), we felt the inability to parse the resultant packets with current
tools, as well as additional complexity incurred, outweighed the slight
improvement in confidentiality.</t>
      </section>
    </section>
    <section anchor="terminology" numbered="true" toc="default">
      <name>Terminology</name>
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD",
"SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be
interpreted as described in <xref target="RFC2119" format="default"/>.</t>
    </section>
    <section anchor="design" numbered="true" toc="default">
      <name>Design</name>
      <t>This specification proposes a mechanism to negotiate encryption of all
RTP header extensions (ids, lengths, and values) as well as CSRC values. It
reuses the existing SRTP framework, is accordingly simple to implement, and
is backward compatible with existing RTP packet parsing code, even when
support for the mechanism has been negotiated.</t>
    </section>
    <section anchor="signaling" numbered="true" toc="default">
      <name>Signaling</name>
      <t>In order to determine whether the mechanism defined in this specification
is supported, this document defines a new "a=cryptex"
Session Description Protocol (SDP) <xref target="RFC4566" format="default"/> attribute to indicate support.</t>
      <t>This attribute takes no value, and can be used at the session level or media level.</t>
      <t>The presence of this attribute in the SDP (either in an offer or answer) indicates that
the endpoint is capable of receiving RTP packets encrypted with Cryptex, as defined below.</t>
      <t>Once each peer has verified that the other party supports receiving RTP packets encrypted with Cryptex, senders can unilaterally decide whether to use the Cryptex mechanism or not.</t>
      <t>The formal definition of this attribute is:</t>
      <artwork name="" type="" align="left" alt=""><![CDATA[
  Name: cryptex

  Value: None

  Usage Level: session, media

  Charset Dependent: No

  Example:

     a=cryptex
]]></artwork>
      <t>When used with BUNDLE, this attribute is assigned to the
   TRANSPORT category <xref target="RFC8859" format="default"/>.
   If BUNDLE is in use and the a=cryptex attribute is present for a media line, it MUST be present for all media lines belonging to the same bundle group. This ensures that the encrypted MID header extensions used to demux BUNDLE can be processed correctly.</t>
    </section>
    <section anchor="rtp-header-processing" numbered="true" toc="default">
      <name>RTP Header Processing</name>
      <t><xref target="RFC8285" format="default"/> defines two values for the "defined by profile" field for carrying
one-byte and two-byte header extensions. In order to allow a receiver to determine
if an incoming RTP packet is using the encryption scheme in this specification,
two new values are defined:</t>
      <ul spacing="normal">
        <li>0xC0DE for the encrypted version of the one-byte header extensions (instead of 0xBEDE).</li>
        <li>0xC2DE for the encrypted versions of the two-byte header extensions (instead of 0x100).</li>
      </ul>
      <t>In the case of using two-byte header extensions, the extension id with value 256 MUST NOT
be negotiated, as the value of this id is meant to be contained in the "appbits" of the
"defined by profile" field, which are not available when using the values above.</t>
      <t>If the "a=extmap-allow-mixed" attribute defined in <xref target="RFC8285" format="default"/> is negotiated, either one-byte
or two-byte header ids can be used (with the values above), as in <xref target="RFC8285" format="default"/>.</t>
      <section anchor="sending" numbered="true" toc="default">
        <name>Sending</name>
        <t>When the mechanism defined by this specification has been negotiated,
sending a RTP packet that has any CSRCs or contains any {RFC8285}}
header extensions follows the steps below. This mechanism MUST NOT be
used with header extensions other than the <xref target="RFC8285" format="default"/> variety.</t>
        <t>If the packet contains solely one-byte extension ids, the 16-bit RTP header extension
tag MUST be set to 0xC0DE to indicate that the encryption has been applied, and the
one-byte framing is being used. If the packet contains only two-byte extension ids,
the header extension tag MUST be set to 0xC2DE to indicate encryption has been applied,
and the two-byte framing is being used.</t>
        <t>If the packet contains CSRCs but no header extensions, an empty extension block
consisting of the 0xC0DE tag and a 16-bit length field set to zero (explicitly
permitted by <xref target="RFC3550" format="default"/>) MUST be appended, and the X bit MUST be set to 1 to
indicate an extension block is present. This is necessary to provide the receiver
an indication that the CSRCs in the packet are encrypted.</t>
        <t>The RTP packet MUST then be encrypted as described in Encryption Procedure.</t>
      </section>
      <section anchor="receiving" numbered="true" toc="default">
        <name>Receiving</name>
        <t>When receiving an RTP packet that contains header extensions, the
"defined by profile" field MUST be checked to ensure the payload is
formatted according to this specification. If the field does not match
one of the values defined above, the implementation MUST instead
handle it according to the specification that defines that value.
The implementation MAY stop and report an error if it considers use of
this specification mandatory for the RTP stream.</t>
        <t>If the RTP packet passes this check, it is then decrypted according to
Decryption Procedure, and passed to the the next layer to process
the packet and its extensions. In the event that a zero-length extension
block was added as indicated above, it can be left as-is and will be
processed normally.</t>
      </section>
    </section>
    <section anchor="encryption-and-decryption" numbered="true" toc="default">
      <name>Encryption and Decryption</name>
      <section anchor="packet-structure" numbered="true" toc="default">
        <name>Packet Structure</name>
        <t>When this mechanism is active, the SRTP packet is protected as follows:</t>
        <artwork name="" type="" align="left" alt=""><![CDATA[
     0                   1                   2                   3
   0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+<+
  |V=2|P|X|  CC   |M|     PT      |       sequence number         | |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |
  |                           timestamp                           | |
  +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |
  |           synchronization source (SSRC) identifier            | |
+>+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+ |
| |            contributing source (CSRC) identifiers             | |
| |                               ....                            | |
+>+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |
X |       0xC0    |    0xDE       |           length=3            | |
+>+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |
| |                  RFC 8285 header extensions                   | |
| +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |
| |                          payload  ...                         | |
| |                               +-------------------------------+ |
| |                               | RTP padding   | RTP pad count | |
+>+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+<+
| ~                     SRTP MKI (OPTIONAL)                       ~ |
| +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |
| :                 authentication tag (RECOMMENDED)              : |
| +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |
|                                                                   |
+- Encrypted Portions*                     Authenticated Portion ---+
]]></artwork>
        <ul spacing="normal">
          <li>Note that the 4 bytes at the start of the extension block are not encrypted, as
required by <xref target="RFC8285" format="default"/>.</li>
        </ul>
        <t>Specifically, the encrypted portion MUST include any CSRC identifiers, any
RTP header extension (except for the first 4 bytes), and the RTP payload.</t>
      </section>
      <section anchor="encryption-procedure" numbered="true" toc="default">
        <name>Encryption Procedure</name>
        <t>The encryption procedure is identical to that of <xref target="RFC3711" format="default"/> except for the
region to encrypt, which is as shown in the section above.</t>
        <t>To minimize changes to surrounding code, the encryption mechanism can choose
to replace a "defined by profile" field from <xref target="RFC8285" format="default"/> with its counterpart
defined in RTP Header Processing above and encrypt at the same time.</t>
        <t>For AEAD ciphers (e.g., GCM), the 12-byte fixed header and the four-byte header
extension header (the "defined by profile" field and the length) are considered
AAD, even though they are non-contiguous in the packet if CSRCs are present.</t>
      </section>
      <section anchor="decryption-procedure" numbered="true" toc="default">
        <name>Decryption Procedure</name>
        <t>The decryption procedure is identical to that of <xref target="RFC3711" format="default"/> except
for the region to decrypt, which is as shown in the section above.</t>
        <t>To minimize changes to surrounding code, the decryption mechanism can choose
to replace the "defined by profile" field with its no-encryption counterpart
from <xref target="RFC8285" format="default"/> and decrypt at the same time.</t>
      </section>
    </section>
    <section anchor="backwards-compatibility" numbered="true" toc="default">
      <name>Backwards Compatibility</name>
      <t>This specification attempts to encrypt as much as possible without interfering
with backwards compatibility for systems that expect a certain structure from
an RTPv2 packet, including systems that perform demultiplexing based on packet
headers. Accordingly, the first two bytes of the RTP packet are not encrypted.</t>
      <t>This specification also attempts to reuse the key scheduling from SRTP, which
depends on the RTP packet sequence number and SSRC identifier. Accordingly
these values are also not encrypted.</t>
    </section>
    <section anchor="security-considerations" numbered="true" toc="default">
      <name>Security Considerations</name>
      <t>This specification extends SRTP by expanding the portion of the packet that is
encrypted, as shown in Packet Structure. It does not change how SRTP authentication
works in any way. Given that more of the packet is being encrypted than before,
this is necessarily an improvement.</t>
      <t>The RTP fields that are left unencrypted (see rationale above) are as follows:</t>
      <ul spacing="normal">
        <li>RTP version</li>
        <li>padding bit</li>
        <li>extension bit</li>
        <li>number of CSRCs</li>
        <li>marker bit</li>
        <li>payload type</li>
        <li>sequence number</li>
        <li>timestamp</li>
        <li>SSRC identifier</li>
        <li>number of <xref target="RFC8285" format="default"/> header extensions</li>
      </ul>
      <t>These values contain a fixed set (i.e., one that won't be changed by
extensions) of information that, at present, is observed to have low
sensitivity. In the event any of these values need to be encrypted, SRTP
is likely the wrong protocol to use and a fully-encapsulating protocol
such as DTLS is preferred (with its attendant per-packet overhead).</t>
    </section>
    <section anchor="iana-considerations" numbered="true" toc="default">
      <name>IANA Considerations</name>
      <t>This document defines two new 'defined by profile' attributes, as noted in RTP Header Processing.</t>
    </section>
    <section anchor="acknowledgements" numbered="true" toc="default">
      <name>Acknowledgements</name>
      <t>The authors wish to thank Lennart Grahl for pointing out many of the issues with the existing
header encryption mechanism, as well as suggestions for this proposal.
Thanks also to Jonathan Lennox, Inaki Castillo, and Bernard Aboba for their review and suggestions.</t>
    </section>
  </middle>
  <back>
    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
        <reference anchor="RFC2119" xml:base="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
          <front>
            <title>Key words for use in RFCs to Indicate Requirement Levels</title>
            <author fullname="S. Bradner" initials="S." surname="Bradner">
              <organization/>
            </author>
            <date month="March" year="1997"/>
            <abstract>
              <t>In many standards track documents several words are used to signify the requirements in the specification.  These words are often capitalized. This document defines these words as they should be interpreted in IETF documents.  This document specifies an Internet Best Current Practices for the Internet Community, and requests discussion and suggestions for improvements.</t>
            </abstract>
          </front>
          <seriesInfo name="BCP" value="14"/>
          <seriesInfo name="RFC" value="2119"/>
          <seriesInfo name="DOI" value="10.17487/RFC2119"/>
        </reference>
        <reference anchor="RFC3550">
          <front>
            <title>RTP: A Transport Protocol for Real-Time Applications</title>
            <author fullname="H. Schulzrinne" initials="H." surname="Schulzrinne">
              <organization/>
            </author>
            <author fullname="S. Casner" initials="S." surname="Casner">
              <organization/>
            </author>
            <author fullname="R. Frederick" initials="R." surname="Frederick">
              <organization/>
            </author>
            <author fullname="V. Jacobson" initials="V." surname="Jacobson">
              <organization/>
            </author>
            <date month="July" year="2003"/>
            <abstract>
              <t>This memorandum describes RTP, the real-time transport protocol.  RTP provides end-to-end network transport functions suitable for applications transmitting real-time data, such as audio, video or simulation data, over multicast or unicast network services.  RTP does not address resource reservation and does not guarantee quality-of- service for real-time services.  The data transport is augmented by a control protocol (RTCP) to allow monitoring of the data delivery in a manner scalable to large multicast networks, and to provide minimal control and identification functionality.  RTP and RTCP are designed to be independent of the underlying transport and network layers.  The protocol supports the use of RTP-level translators and mixers. Most of the text in this memorandum is identical to RFC 1889 which it obsoletes.  There are no changes in the packet formats on the wire, only changes to the rules and algorithms governing how the protocol is used. The biggest change is an enhancement to the scalable timer algorithm for calculating when to send RTCP packets in order to minimize transmission in excess of the intended rate when many participants join a session simultaneously.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="STD" value="64"/>
          <seriesInfo name="RFC" value="3550"/>
          <seriesInfo name="DOI" value="10.17487/RFC3550"/>
        </reference>
        <reference anchor="RFC3711" xml:base="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.3711.xml">
          <front>
            <title>The Secure Real-time Transport Protocol (SRTP)</title>
            <author fullname="M. Baugher" initials="M." surname="Baugher">
              <organization/>
            </author>
            <author fullname="D. McGrew" initials="D." surname="McGrew">
              <organization/>
            </author>
            <author fullname="M. Naslund" initials="M." surname="Naslund">
              <organization/>
            </author>
            <author fullname="E. Carrara" initials="E." surname="Carrara">
              <organization/>
            </author>
            <author fullname="K. Norrman" initials="K." surname="Norrman">
              <organization/>
            </author>
            <date month="March" year="2004"/>
            <abstract>
              <t>This document describes the Secure Real-time Transport Protocol (SRTP), a profile of the Real-time Transport Protocol (RTP), which can provide confidentiality, message authentication, and replay protection to the RTP traffic and to the control traffic for RTP, the Real-time Transport Control Protocol (RTCP).   [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="3711"/>
          <seriesInfo name="DOI" value="10.17487/RFC3711"/>
        </reference>
        <reference anchor="RFC4566" xml:base="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.4566.xml">
          <front>
            <title>SDP: Session Description Protocol</title>
            <author fullname="M. Handley" initials="M." surname="Handley">
              <organization/>
            </author>
            <author fullname="V. Jacobson" initials="V." surname="Jacobson">
              <organization/>
            </author>
            <author fullname="C. Perkins" initials="C." surname="Perkins">
              <organization/>
            </author>
            <date month="July" year="2006"/>
            <abstract>
              <t>This memo defines the Session Description Protocol (SDP).  SDP is intended for describing multimedia sessions for the purposes of session announcement, session invitation, and other forms of multimedia session initiation.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="4566"/>
          <seriesInfo name="DOI" value="10.17487/RFC4566"/>
        </reference>
        <reference anchor="RFC8285">
          <front>
            <title>A General Mechanism for RTP Header Extensions</title>
            <author fullname="D. Singer" initials="D." surname="Singer">
              <organization/>
            </author>
            <author fullname="H. Desineni" initials="H." surname="Desineni">
              <organization/>
            </author>
            <author fullname="R. Even" initials="R." role="editor" surname="Even">
              <organization/>
            </author>
            <date month="October" year="2017"/>
            <abstract>
              <t>This document provides a general mechanism to use the header extension feature of RTP (the Real-time Transport Protocol).  It provides the option to use a small number of small extensions in each RTP packet, where the universe of possible extensions is large and registration is decentralized.  The actual extensions in use in a session are signaled in the setup information for that session.  This document obsoletes RFC 5285.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8285"/>
          <seriesInfo name="DOI" value="10.17487/RFC8285"/>
        </reference>
        <reference anchor="RFC8859">
          <front>
            <title>A Framework for Session Description Protocol (SDP) Attributes When Multiplexing</title>
            <author fullname="S. Nandakumar" initials="S." surname="Nandakumar">
              <organization/>
            </author>
            <date month="January" year="2021"/>
            <abstract>
              <t>The purpose of this specification is to provide a framework for analyzing the multiplexing characteristics of Session Description Protocol (SDP) attributes when SDP is used to negotiate the usage of a single 5-tuple for sending and receiving media associated with multiple media descriptions.</t>
              <t>This specification also categorizes the existing SDP attributes based on the framework described herein.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="8859"/>
          <seriesInfo name="DOI" value="10.17487/RFC8859"/>
        </reference>
      </references>
      <references>
        <name>Informative References</name>
        <reference anchor="RFC6464" xml:base="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6464.xml">
          <front>
            <title>A Real-time Transport Protocol (RTP) Header Extension for Client-to-Mixer Audio Level Indication</title>
            <author fullname="J. Lennox" initials="J." role="editor" surname="Lennox">
              <organization/>
            </author>
            <author fullname="E. Ivov" initials="E." surname="Ivov">
              <organization/>
            </author>
            <author fullname="E. Marocco" initials="E." surname="Marocco">
              <organization/>
            </author>
            <date month="December" year="2011"/>
            <abstract>
              <t>This document defines a mechanism by which packets of Real-time Transport Protocol (RTP) audio streams can indicate, in an RTP header extension, the audio level of the audio sample carried in the RTP packet.  In large conferences, this can reduce the load on an audio mixer or other middlebox that wants to forward only a few of the loudest audio streams, without requiring it to decode and measure every stream that is received.  [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6464"/>
          <seriesInfo name="DOI" value="10.17487/RFC6464"/>
        </reference>
        <reference anchor="RFC6465">
          <front>
            <title>A Real-time Transport Protocol (RTP) Header Extension for Mixer-to-Client Audio Level Indication</title>
            <author fullname="E. Ivov" initials="E." role="editor" surname="Ivov">
              <organization/>
            </author>
            <author fullname="E. Marocco" initials="E." role="editor" surname="Marocco">
              <organization/>
            </author>
            <author fullname="J. Lennox" initials="J." surname="Lennox">
              <organization/>
            </author>
            <date month="December" year="2011"/>
            <abstract>
              <t>This document describes a mechanism for RTP-level mixers in audio conferences to deliver information about the audio level of individual participants.  Such audio level indicators are transported in the same RTP packets as the audio data they pertain to. [STANDARDS-TRACK]</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6465"/>
          <seriesInfo name="DOI" value="10.17487/RFC6465"/>
        </reference>
        <reference anchor="RFC6904" xml:base="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.6904.xml">
          <front>
            <title>Encryption of Header Extensions in the Secure Real-time Transport Protocol (SRTP)</title>
            <author fullname="J. Lennox" initials="J." surname="Lennox">
              <organization/>
            </author>
            <date month="April" year="2013"/>
            <abstract>
              <t>The Secure Real-time Transport Protocol (SRTP) provides authentication, but not encryption, of the headers of Real-time Transport Protocol (RTP) packets.  However, RTP header extensions may carry sensitive information for which participants in multimedia sessions want confidentiality.  This document provides a mechanism, extending the mechanisms of SRTP, to selectively encrypt RTP header extensions in SRTP.</t>
              <t>This document updates RFC 3711, the Secure Real-time Transport Protocol specification, to require that all future SRTP encryption transforms specify how RTP header extensions are to be encrypted.</t>
            </abstract>
          </front>
          <seriesInfo name="RFC" value="6904"/>
          <seriesInfo name="DOI" value="10.17487/RFC6904"/>
        </reference>
      </references>
    </references>
    <section anchor="test-vectors" numbered="true" toc="default">
      <name>Test Vectors</name>
      <t>All values are in hexadecimal and represented in network order (big endian).</t>
      <section anchor="aes-ctr" numbered="true" toc="default">
        <name>AES-CTR</name>
        <t>Common values are organized as follows:</t>
        <artwork name="" type="" align="left" alt=""><![CDATA[
    Rollover Counter:          00000000
    Master Key:                e1f97a0d3e018be0d64fa32c06de4139
    Master Salt:               0ec675ad498afeebb6960b3aabe6
    Crypto Suite:              AES_CM_128_HMAC_SHA1_80
    Session Key:               c61e7a93744f39ee10734afe3ff7a087
    Session Salt:              30cbbc08863d8c85d49db34a9ae1
    Authentication Key:        cebe321f6ff7716b6fd4ab49af256a156d38baa4
]]></artwork>
        <section anchor="rtp-packet-with-1-byte-header-extension" numbered="true" toc="default">
          <name>RTP Packet with 1-byte header extension</name>
          <t>RTP Packet:</t>
          <artwork name="" type="" align="left" alt=""><![CDATA[
    900f1235
    decafbad
    cafebabe
    bede0001
    51000200
    abababab
    abababab
    abababab
    abababab
]]></artwork>
          <t>Encrypted RTP Packet:</t>
          <artwork name="" type="" align="left" alt=""><![CDATA[
    900f1235
    decafbad
    cafebabe
    c0de0001
    eb923652
    51c3e036
    f8de27e9
    c27ee3e0
    b4651d9f
    bc4218a7
    0244522f
    34a5
]]></artwork>
        </section>
        <section anchor="rtp-packet-with-2-byte-header-extension" numbered="true" toc="default">
          <name>RTP Packet with 2-byte header extension</name>
          <t>RTP Packet:</t>
          <artwork name="" type="" align="left" alt=""><![CDATA[
    900f1236
    decafbad
    cafebabe
    10000001
    05020002
    abababab
    abababab
    abababab
    abababab
]]></artwork>
          <t>Encrypted RTP Packet:</t>
          <artwork name="" type="" align="left" alt=""><![CDATA[
    900f1236
    decafbad
    cafebabe
    c2de0001
    4ed9cc4e
    6a712b30
    96c5ca77
    339d4204
    ce0d7739
    6cab6958
    5fbce381
    94a5
]]></artwork>
        </section>
        <section anchor="rtp-packet-with-1-byte-header-extension-and-csrc-fields" numbered="true" toc="default">
          <name>RTP Packet with 1-byte header extension and CSRC fields</name>
          <t>RTP Packet:</t>
          <artwork name="" type="" align="left" alt=""><![CDATA[
    920f1238
    decafbad
    cafebabe
    0001e240
    0000b26e
    bede0001
    51000200
    abababab
    abababab
    abababab
    abababab
]]></artwork>
          <t>Encrypted RTP Packet:</t>
          <artwork name="" type="" align="left" alt=""><![CDATA[
    920f1238
    decafbad
    cafebabe
    8bb6e12b
    5cff16dd
    c0de0001
    92838c8c
    09e58393
    e1de3a9a
    74734d67
    45671338
    c3acf11d
    a2df8423
    bee0
]]></artwork>
        </section>
        <section anchor="rtp-packet-with-2-byte-header-extension-and-csrc-fields" numbered="true" toc="default">
          <name>RTP Packet with 2-byte header extension and CSRC fields</name>
          <t>RTP Packet:</t>
          <artwork name="" type="" align="left" alt=""><![CDATA[
    920f1239
    decafbad
    cafebabe
    0001e240
    0000b26e
    10000001
    05020002
    abababab
    abababab
    abababab
    abababab
]]></artwork>
          <t>Encrypted RTP Packet:</t>
          <artwork name="" type="" align="left" alt=""><![CDATA[
    920f1239
    decafbad
    cafebabe
    f70e513e
    b90b9b25
    c2de0001
    bbed4848
    faa64466
    5f3d7f34
    125914e9
    f4d0ae92
    3c6f479b
    95a0f7b5
    3133
]]></artwork>
        </section>
        <section anchor="rtp-packet-with-empty-1-byte-header-extension-and-csrc-fields" numbered="true" toc="default">
          <name>RTP Packet with empty 1-byte header extension and CSRC fields</name>
          <t>RTP Packet:</t>
          <artwork name="" type="" align="left" alt=""><![CDATA[
    920f123a
    decafbad
    cafebabe
    0001e240
    0000b26e
    bede0000
    abababab
    abababab
    abababab
    abababab
]]></artwork>
          <t>Encrypted RTP Packet:</t>
          <artwork name="" type="" align="left" alt=""><![CDATA[
    920f123a
    decafbad
    cafebabe
    7130b6ab
    fe2ab0e3
    c0de0000
    e3d9f64b
    25c9e74c
    b4cf8e43
    fb92e378
    1c2c0cea
    b6b3a499
    a14c
]]></artwork>
        </section>
        <section anchor="rtp-packet-with-empty-2-byte-header-extension-and-csrc-fields" numbered="true" toc="default">
          <name>RTP Packet with empty 2-byte header extension and CSRC fields</name>
          <t>RTP Packet:</t>
          <artwork name="" type="" align="left" alt=""><![CDATA[
    920f123b
    decafbad
    cafebabe
    0001e240
    0000b26e
    10000000
    abababab
    abababab
    abababab
    abababab
]]></artwork>
          <t>Encrypted RTP Packet:</t>
          <artwork name="" type="" align="left" alt=""><![CDATA[
    920f123b
    decafbad
    cafebabe
    cbf24c12
    4330e1c8
    c2de0000
    599dd45b
    c9d687b6
    03e8b59d
    771fd38e
    88b170e0
    cd31e125
    eabe
]]></artwork>
        </section>
      </section>
      <section anchor="aes-gcm" numbered="true" toc="default">
        <name>AES-GCM</name>
        <t>Common values are organized as follows:</t>
        <artwork name="" type="" align="left" alt=""><![CDATA[
    Rollover Counter:          00000000
    Master Key:                000102030405060708090a0b0c0d0e0f
    Master Salt:               a0a1a2a3a4a5a6a7a8a9aaab
    Crypto Suite:              AEAD_AES_128_GCM
    Session Key:               077c6143cb221bc355ff23d5f984a16e
    Session Salt:              9af3e95364ebac9c99c5a7c4
]]></artwork>
        <section anchor="rtp-packet-with-1-byte-header-extension-1" numbered="true" toc="default">
          <name>RTP Packet with 1-byte header extension</name>
          <t>RTP Packet:</t>
          <artwork name="" type="" align="left" alt=""><![CDATA[
    900f1235
    decafbad
    cafebabe
    bede0001
    51000200
    abababab
    abababab
    abababab
    abababab
]]></artwork>
          <t>Encrypted RTP Packet:</t>
          <artwork name="" type="" align="left" alt=""><![CDATA[
    900f1235
    decafbad
    cafebabe
    c0de0001
    39972dc9
    572c4d99
    e8fc355d
    e743fb2e
    94f9d8ff
    54e72f41
    93bbc5c7
    4ffab0fa
    9fa0fbeb
]]></artwork>
        </section>
        <section anchor="rtp-packet-with-2-byte-header-extension-1" numbered="true" toc="default">
          <name>RTP Packet with 2-byte header extension</name>
          <t>RTP Packet:</t>
          <artwork name="" type="" align="left" alt=""><![CDATA[
    900f1236
    decafbad
    cafebabe
    10000001
    05020002
    abababab
    abababab
    abababab
    abababab
]]></artwork>
          <t>Encrypted RTP Packet:</t>
          <artwork name="" type="" align="left" alt=""><![CDATA[
    900f1236
    decafbad
    cafebabe
    c2de0001
    bb75a4c5
    45cd1f41
    3bdb7daa
    2b1e3263
    de313667
    c9632490
    81b35a65
    f5cb6c88
    b394235f
]]></artwork>
        </section>
        <section anchor="rtp-packet-with-1-byte-header-extension-and-csrc-fields-1" numbered="true" toc="default">
          <name>RTP Packet with 1-byte header extension and CSRC fields</name>
          <t>RTP Packet:</t>
          <artwork name="" type="" align="left" alt=""><![CDATA[
    920f1238
    decafbad
    cafebabe
    0001e240
    0000b26e
    bede0001
    51000200
    abababab
    abababab
    abababab
    abababab
]]></artwork>
          <t>Encrypted RTP Packet:</t>
          <artwork name="" type="" align="left" alt=""><![CDATA[
    920f1238
    decafbad
    cafebabe
    63bbccc4
    a7f695c4
    c0de0001
    8ad7c71f
    ac70a80c
    92866b4c
    6ba98546
    ef913586
    e95ffaaf
    fe956885
    bb0647a8
    bc094ac8
]]></artwork>
        </section>
        <section anchor="rtp-packet-with-2-byte-header-extension-and-csrc-fields-1" numbered="true" toc="default">
          <name>RTP Packet with 2-byte header extension and CSRC fields</name>
          <t>RTP Packet:</t>
          <artwork name="" type="" align="left" alt=""><![CDATA[
    920f1239
    decafbad
    cafebabe
    0001e240
    0000b26e
    10000001
    05020002
    abababab
    abababab
    abababab
    abababab
]]></artwork>
          <t>Encrypted RTP Packet:</t>
          <artwork name="" type="" align="left" alt=""><![CDATA[
    920f1239
    decafbad
    cafebabe
    3680524f
    8d312b00
    c2de0001
    c78d1200
    38422bc1
    11a7187a
    18246f98
    0c059cc6
    bc9df8b6
    26394eca
    344e4b05
    d80fea83
]]></artwork>
        </section>
        <section anchor="rtp-packet-with-empty-1-byte-header-extension-and-csrc-fields-1" numbered="true" toc="default">
          <name>RTP Packet with empty 1-byte header extension and CSRC fields</name>
          <t>RTP Packet:</t>
          <artwork name="" type="" align="left" alt=""><![CDATA[
    920f123a
    decafbad
    cafebabe
    0001e240
    0000b26e
    bede0000
    abababab
    abababab
    abababab
    abababab
]]></artwork>
          <t>Encrypted RTP Packet:</t>
          <artwork name="" type="" align="left" alt=""><![CDATA[
    920f123a
    decafbad
    cafebabe
    15b6bb43
    37906fff
    c0de0000
    b7b96453
    7a2b03ab
    7ba5389c
    e9331712
    6b5d974d
    f30c6884
    dcb651c5
    e120c1da
]]></artwork>
        </section>
        <section anchor="rtp-packet-with-empty-2-byte-header-extension-and-csrc-fields-1" numbered="true" toc="default">
          <name>RTP Packet with empty 2-byte header extension and CSRC fields</name>
          <t>RTP Packet:</t>
          <artwork name="" type="" align="left" alt=""><![CDATA[
    920f123b
    decafbad
    cafebabe
    0001e240
    0000b26e
    10000000
    abababab
    abababab
    abababab
    abababab
]]></artwork>
          <t>Encrypted RTP Packet:</t>
          <artwork name="" type="" align="left" alt=""><![CDATA[
    920f123b
    decafbad
    cafebabe
    dcb38c9e
    48bf95f4
    c2de0000
    61ee432c
    f9203170
    76613258
    d3ce4236
    c06ac429
    681ad084
    13512dc9
    8b5207d8
]]></artwork>
        </section>
      </section>
    </section>
  </back>
  <!-- ##markdown-source:
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
xv4Ps8iSyVpWAAA=

-->

</rfc>
